// Decompiled with JetBrains decompiler
// Type: ChessEngine.Engine.Zobrist
// Assembly: ChessEngine, Version=0.0.8.0, Culture=neutral, PublicKeyToken=null
// MVID: 5AD2B565-9B75-423F-BD9A-4B0A934C5249
// Assembly location: C:\Users\Ahmad Elsayed\1\ChessBinNoSetup\ChessBinNoSetup\ChessEngine.dll

namespace ChessEngine.Engine
{
  internal static class Zobrist
  {
    internal static ulong[] ZobristTable = new ulong[781]
    {
      11329126462075137345UL,
      3096006490854172103UL,
      4961560858198160711UL,
      11247167491742853858UL,
      8467686926187236489UL,
      3643601464190828991UL,
      1133690081497064057UL,
      16733846313379782858UL,
      972344712846728208UL,
      1875810966947487789UL,
      10810281711139472304UL,
      14997549008232787669UL,
      4665150172008230450UL,
      77499164859392917UL,
      6752165915987794405UL,
      2566923340161161676UL,
      419294011261754017UL,
      7466832458773678449UL,
      8379435287740149003UL,
      9012210492721573360UL,
      9423624571218474956UL,
      17519441378370680940UL,
      3680699783482293222UL,
      5454859592240567363UL,
      12278110483549868284UL,
      10213487357180498955UL,
      9786892961111839255UL,
      1870057424550439649UL,
      13018552956850641599UL,
      8864492181390654148UL,
      14503047275519531101UL,
      2642043227856860416UL,
      5521189128215049287UL,
      1488034881489406017UL,
      12041389016824462739UL,
      236592455471957263UL,
      7168370738516443200UL,
      707553987122498196UL,
      3852097769995099451UL,
      8313129892476901923UL,
      1761594034649645067UL,
      2291114854896829159UL,
      15208840396761949525UL,
      13805854893277020740UL,
      11490038688513304612UL,
      5903053950100844597UL,
      6666107027411611898UL,
      18228317886339920449UL,
      3626425922614869470UL,
      10120929114188361845UL,
      13383691520091894759UL,
      9148094160140652064UL,
      1284939680052264319UL,
      7307368198934274627UL,
      5611679697977124792UL,
      10869036679776403037UL,
      4819485793530191663UL,
      7866624006794876513UL,
      4794093907474700625UL,
      6849775302623042486UL,
      4177248038373896072UL,
      10648116955499083915UL,
      7195685255425235832UL,
      17012007340428799350UL,
      6004979459829542343UL,
      575228772519342402UL,
      5806056339682094430UL,
      8920438500019044156UL,
      1872523786854905556UL,
      7168173152291242201UL,
      9388215746117386743UL,
      8767779863385330152UL,
      1489771135892281206UL,
      17385502867130851733UL,
      15762364259840250620UL,
      2649182342564336630UL,
      13505777571156529898UL,
      928423270205194457UL,
      11861585534482611396UL,
      16833723316851456313UL,
      2875176145464482879UL,
      9598842341590061041UL,
      6103491276194240627UL,
      8264435384771931435UL,
      17191732074717978439UL,
      11134495390804798113UL,
      8118948727165493749UL,
      17994305203349779906UL,
      9778408473133385649UL,
      11774350857553791160UL,
      12559012443159756018UL,
      1810658488341658557UL,
      9781539968129051369UL,
      658149708018956377UL,
      18376927623552767184UL,
      10225665576382809422UL,
      11247233359009848457UL,
      12966474917842991341UL,
      4111328737826509899UL,
      6628917895947053289UL,
      2166287019647928708UL,
      11129710491401161907UL,
      5728850993485642500UL,
      7135057069693417668UL,
      2409960466139986440UL,
      6600979542443030540UL,
      5794634036844991298UL,
      1765885809474863574UL,
      7278670237115156036UL,
      16128398739451409575UL,
      17262998572099182834UL,
      8877430296282562796UL,
      13401997949814268483UL,
      407550088776850295UL,
      13080877114316753525UL,
      5365205568318698487UL,
      14935709793025404810UL,
      17669982663530100772UL,
      4357691132969283455UL,
      17142609481641189533UL,
      8763584794241613617UL,
      9679198277270145676UL,
      10941274620888120179UL,
      11693142871022667058UL,
      306186389089741728UL,
      10524424786855933342UL,
      8136607301146677452UL,
      8332101422058904765UL,
      6215931344642484877UL,
      17270261617132277633UL,
      13484155073233549231UL,
      5040091220514117480UL,
      10596830237594186850UL,
      18403699292185779873UL,
      12565676100625672816UL,
      15937214097180383484UL,
      9145986266726084057UL,
      2521545561146285852UL,
      14490332804203256105UL,
      9262732965782291301UL,
      16052069408498386422UL,
      2012514900658959106UL,
      4851386166840481282UL,
      12292183054157138810UL,
      12139508679861857878UL,
      7319524202191393198UL,
      16056131139463546102UL,
      2445601317840807269UL,
      12976440137245871676UL,
      10500241373960823632UL,
      1211454228928495690UL,
      2931510483461322717UL,
      14252799396886324310UL,
      6217490319246239553UL,
      3253094721785420467UL,
      11224557480718216148UL,
      17235000084441506492UL,
      12619159779355142232UL,
      5189293263797206570UL,
      12606612515749494339UL,
      1850950425290819967UL,
      5933835573330569280UL,
      17649737671476307696UL,
      1240625309976189683UL,
      13611516503114563861UL,
      11359244008442730831UL,
      463713201815588887UL,
      5603848033623546396UL,
      5837679654670194627UL,
      13869467824702862516UL,
      13001586210446667388UL,
      12934789215927278727UL,
      2422944928445377056UL,
      3310549754053175887UL,
      8519766042450553085UL,
      17839818495653611168UL,
      15503797852889124145UL,
      16011257830124405835UL,
      862037678550916899UL,
      3197637623672940211UL,
      5210919022407409764UL,
      14971170165545012763UL,
      12708212522875260313UL,
      11160345150269715688UL,
      11888460494489868490UL,
      16669255491632516726UL,
      7618258446600650238UL,
      17993489941568846998UL,
      18188493901990876667UL,
      11270342415364539415UL,
      10288892439142166224UL,
      7423022476929853822UL,
      14215600671451202638UL,
      8710936142583354014UL,
      18346051800474256890UL,
      629718674134230549UL,
      10598630096540703438UL,
      10666243034611769205UL,
      16077181743459442704UL,
      4303848835390748061UL,
      15183795910155040575UL,
      17843919060799288312UL,
      15561328988693261185UL,
      15662367820628426663UL,
      3706272247737428199UL,
      12051713806767926385UL,
      11742603550742019509UL,
      5704473791139820979UL,
      9787307967224182873UL,
      1637612482787097121UL,
      8908762506463270222UL,
      17556853009980515212UL,
      4157033003383749538UL,
      18207866109112763428UL,
      1800584982121391508UL,
      5477894166363593411UL,
      4674885479076762381UL,
      10160025381792793281UL,
      7550910419722901151UL,
      8799727354050345442UL,
      11321311575067810671UL,
      4039979115090434978UL,
      3605513501649795505UL,
      3876110682321388426UL,
      12180869515786039217UL,
      8620494007958685373UL,
      5854220346205463345UL,
      4855373848161890066UL,
      15654983601351599195UL,
      5949110547793674363UL,
      5957016279979211145UL,
      11321480117988196211UL,
      8228060533160592200UL,
      2094843038752308887UL,
      8801329274201873314UL,
      297395810205168342UL,
      6489982145962516640UL,
      925952168551929496UL,
      6268205602454985292UL,
      2903841526205938350UL,
      359914117944187339UL,
      8371662176944962179UL,
      11139146693264846140UL,
      9807576242525944290UL,
      5795683315677088036UL,
      12688959799593560697UL,
      1070089889651807102UL,
      6778454470502372484UL,
      17760055623755082862UL,
      1983224895012736197UL,
      15760908081339863073UL,
      942692161281275413UL,
      12134286529149333529UL,
      10647676541963177979UL,
      11090026030168016689UL,
      5245566602671237210UL,
      9195060651485531055UL,
      6368791473535302177UL,
      3229483537647869491UL,
      15232282204279634326UL,
      928484295759785709UL,
      1909608352012281665UL,
      10412093924024305118UL,
      5773445318897257735UL,
      3990834569972524777UL,
      10771395766813261646UL,
      4209783265310087306UL,
      15318153364378526533UL,
      616435239304311520UL,
      17961392050318287288UL,
      7798983577523272147UL,
      3913469721920333102UL,
      15424667983992144418UL,
      6239239264182308800UL,
      1654244791516730287UL,
      17228895932005785491UL,
      6221161860315361832UL,
      17056602083001532789UL,
      13458912522609437003UL,
      12917665617485216338UL,
      7337288846716161725UL,
      13022188282781700578UL,
      12979943748599740071UL,
      510457344639386445UL,
      8796640079689568245UL,
      13565008864486958290UL,
      6465331256500611624UL,
      11031297210088248644UL,
      8017026739316632057UL,
      3627975979343775636UL,
      15052215649796371267UL,
      6222903725779446311UL,
      3527832623857636372UL,
      15597050972685397327UL,
      8924250025456295612UL,
      14400806714161458836UL,
      10699110515857614396UL,
      14468157413083537247UL,
      4223238849618215370UL,
      15681850266533497060UL,
      1140009269240963018UL,
      12966521765762216121UL,
      12695701950206930564UL,
      3881319844097050799UL,
      16858671235974049358UL,
      17004178443650550617UL,
      10544522896658866816UL,
      13378871666599081203UL,
      7580967567056532817UL,
      14279886347066493375UL,
      14791316027199525482UL,
      13540141887354822347UL,
      15889873206108611120UL,
      13441296750672675768UL,
      11798467976251859403UL,
      16858792058461978657UL,
      704784010218719535UL,
      9596982322589424841UL,
      9297677921824001878UL,
      687173692492309888UL,
      2573542046251205823UL,
      14064986013008197277UL,
      5122261027125484554UL,
      12166444546397347981UL,
      392580029432520891UL,
      13077660124902070727UL,
      16778702188287612735UL,
      3451078315256158032UL,
      1238907336018749328UL,
      9205113463181886956UL,
      1667962162104261376UL,
      10830753981784044039UL,
      4479827962372740717UL,
      13723669708721922220UL,
      17895945165757891767UL,
      5275192813757817777UL,
      2148246364622112874UL,
      2290795724393258885UL,
      18193581350273252090UL,
      1776293542351822525UL,
      14757011774120772237UL,
      4313244667902787366UL,
      12281515972708701602UL,
      16810874891151093887UL,
      13231770820477907822UL,
      15338037979535853741UL,
      3321611548688927336UL,
      3305807524324674332UL,
      13385011844708802686UL,
      7248312053715383136UL,
      10692263740491040132UL,
      15834887971838928217UL,
      15164530629649278767UL,
      9112428691881135949UL,
      7848957776938116907UL,
      10951816186743012388UL,
      8896660382367628050UL,
      9603906275513256852UL,
      8762207035762213579UL,
      14987444343672838948UL,
      9409751230138127831UL,
      10591026249259463665UL,
      7197363620976276483UL,
      14301381657157454364UL,
      6373588016705149671UL,
      685071415365890925UL,
      11485719029193745472UL,
      11525714121369126191UL,
      16463451990009075596UL,
      16713578179004591821UL,
      6251124536988276734UL,
      6144308296388004591UL,
      8880818733894805775UL,
      1303007271453773655UL,
      9174156641096830119UL,
      8824404812019774483UL,
      4420129794615782201UL,
      9951556838786075828UL,
      8883975763174874978UL,
      10736884308676275715UL,
      5595889224692918441UL,
      4306406647446967767UL,
      6704191827946442961UL,
      9195534799547011879UL,
      15724940538984617905UL,
      15915014237009546277UL,
      3928039610514994951UL,
      14873195079178728329UL,
      12362539403674935092UL,
      4869881251581666789UL,
      12986343614603388393UL,
      1215083005313393810UL,
      15835354158744478399UL,
      11186056805483324290UL,
      13149236123055901828UL,
      13821214860367539280UL,
      12182689304549523133UL,
      2305696533800337221UL,
      12399248800711438055UL,
      12612571074767202621UL,
      1949121388445288260UL,
      13067734303660960050UL,
      14085928898807657146UL,
      14099042149407050217UL,
      17561987301945706495UL,
      11512458344154956250UL,
      7437568954088789707UL,
      7915171836405846582UL,
      11752651295154297649UL,
      520574178807700830UL,
      9984063241072378277UL,
      16254155646211095029UL,
      8412807604418121470UL,
      5609875541891257226UL,
      11323858615586018348UL,
      8376971840073549054UL,
      1383314287233606303UL,
      15474222835752021056UL,
      5204145074798490767UL,
      2167677454434536938UL,
      10341418833443722943UL,
      8271005071015654673UL,
      15537457915439920220UL,
      10730891177390075310UL,
      11511496483171570656UL,
      16026237624051288806UL,
      11839117319019400126UL,
      11321351259605636133UL,
      5895970210948560438UL,
      3447475526873961356UL,
      7334775646005305872UL,
      15954460007382865005UL,
      6939292427400212706UL,
      8334626163711782046UL,
      1912937584935571784UL,
      12304971244567641760UL,
      8524679326357320614UL,
      2204997376562282123UL,
      3197166419597805379UL,
      4220875528993937793UL,
      2803169229572255230UL,
      5085503808422584221UL,
      14444799216525086860UL,
      4570145336765972565UL,
      9186432380899140933UL,
      11239615222781363662UL,
      9872907954749725788UL,
      10369691348610460342UL,
      11573842626212501214UL,
      18049927275724560211UL,
      15471783285232223897UL,
      16134745906572777443UL,
      13149419803421182712UL,
      14564139292183438565UL,
      2088698177441502777UL,
      15099871677732932330UL,
      5679318949880730421UL,
      16491038769688081874UL,
      1684901764271550206UL,
      6019498834983443029UL,
      8308552077872645018UL,
      2774412133178445207UL,
      2993471197969887147UL,
      8756104692490586069UL,
      7404378077533100169UL,
      11391825116471223489UL,
      17128408637045999621UL,
      5816122712455824169UL,
      5531291136777113635UL,
      7400684525794093602UL,
      2421696223438995901UL,
      2746718911238191773UL,
      2297623779240041360UL,
      15514986454711725499UL,
      13355177993350187464UL,
      2151598180055853022UL,
      14933732441462847914UL,
      17651243408385815107UL,
      4086544267540179726UL,
      3960368502933186560UL,
      16948614951473504462UL,
      11262612224635188739UL,
      12613511070148831882UL,
      2706199935239343179UL,
      10054459213633325149UL,
      17640957734094436437UL,
      15290986714861486531UL,
      16616573458614039565UL,
      2626432152093131908UL,
      14024745482209308341UL,
      12344195406125417964UL,
      7167044992416702836UL,
      11933989054878784040UL,
      1255659969011027721UL,
      3240842176865726111UL,
      795178308456769763UL,
      12389083385239203825UL,
      6408553047871587981UL,
      14331996049216472800UL,
      3362936192376505047UL,
      1486633608756523830UL,
      8937438391818961808UL,
      15513702763578092231UL,
      9242607645174922067UL,
      16999375738341892551UL,
      225631029947824688UL,
      5294122026845313316UL,
      11666909141406975304UL,
      6576914768872977647UL,
      13014342141693467190UL,
      15296769519938257969UL,
      1344590668019013826UL,
      8870296219354404UL,
      1763076921063072981UL,
      11710831831040350446UL,
      11042296215092253456UL,
      12923501896423220822UL,
      2679459049130362043UL,
      15149139477832742400UL,
      2006921612949215342UL,
      2441159149980359103UL,
      4254066403785111886UL,
      10165995291879048302UL,
      17968517685540419316UL,
      4067155115498534723UL,
      14584673823956990486UL,
      7262306400971602773UL,
      2599246507224983677UL,
      1183331494191622178UL,
      9203696637336472112UL,
      8684305384778066392UL,
      452576500022594089UL,
      7158260433795827572UL,
      5749101480176103715UL,
      2141838636388669305UL,
      13319697665469568251UL,
      11739738846189583585UL,
      15704600611932076809UL,
      17288566729036156523UL,
      3345333136360207999UL,
      12225668941959679643UL,
      13135848755558586049UL,
      8127707564878445808UL,
      11020438739076919854UL,
      13800233257954351967UL,
      10719452353263111411UL,
      4467639418469323241UL,
      13341252870622785523UL,
      7043015398453076736UL,
      13802777531561938248UL,
      2597087673064131360UL,
      18196619797102886407UL,
      17222554220133987378UL,
      11603572837337492490UL,
      9373650498706682568UL,
      15247985213323458255UL,
      2826050093225892884UL,
      7047939442312345917UL,
      1975862676241125979UL,
      8471065344236531211UL,
      10781433328192619353UL,
      12710259184248419661UL,
      6983092299355911633UL,
      8891398163252015007UL,
      18232837537224201402UL,
      10128874404256367960UL,
      1184291664448112016UL,
      8752186474456668498UL,
      11883874832968622155UL,
      8304258407043758711UL,
      13031437632736158055UL,
      11394657882570178521UL,
      11346359947151974253UL,
      15207539437603825135UL,
      6743071165850287963UL,
      1895531807983368793UL,
      8070015023023620019UL,
      15994912017468668362UL,
      7264555371116116147UL,
      638838107884199779UL,
      612060626599877907UL,
      16368581545287660539UL,
      2028126038944990910UL,
      8217932366665821866UL,
      12715716898990721499UL,
      4917760284400488853UL,
      4689038209317479950UL,
      15570055495392019914UL,
      7353589116749496814UL,
      6461588461223219363UL,
      16737230234434607639UL,
      10643751583066909176UL,
      13889371344374910415UL,
      14623784806974468748UL,
      6280119077769544053UL,
      5795026310427216669UL,
      15581542564775929183UL,
      5344020438314994897UL,
      17090582320435646615UL,
      13070392342864893666UL,
      2499216570383001617UL,
      5973851566933180981UL,
      11163195574208743088UL,
      10686881252049739702UL,
      7802414647854227001UL,
      7696730671131205892UL,
      11939552629336260711UL,
      8954801150602803298UL,
      5805966293032425995UL,
      10608482480047230587UL,
      4997389530575201269UL,
      7710978612650642680UL,
      7716832357345836839UL,
      15123312752564224361UL,
      16000314919358148208UL,
      5766400084981923062UL,
      11245886267645737076UL,
      8713884558928322285UL,
      7910921931260759656UL,
      17192478743862940141UL,
      3651028258442904531UL,
      4208705969817343911UL,
      3568641929344250749UL,
      7493701010274154640UL,
      2245920858524015772UL,
      13159017457951468389UL,
      12290633441485835508UL,
      17599068061438200851UL,
      18107352842948477138UL,
      3841784002685309084UL,
      3972025232192455038UL,
      7780701379940603769UL,
      14773200954226001784UL,
      16368109790951669962UL,
      11498059885876068682UL,
      331717439817162336UL,
      18209951341142539931UL,
      639100052003347099UL,
      10347169565922244001UL,
      13093097841025825382UL,
      2526013881820679475UL,
      4894708394808468861UL,
      4217798054095379555UL,
      2415982786774940751UL,
      2008219703699744969UL,
      6034935405124924712UL,
      16377935039880138091UL,
      15469949637801139582UL,
      6813989660423069229UL,
      3171782229498906237UL,
      12757488664123869734UL,
      4587441767303016857UL,
      1011542511767058351UL,
      1218420902424652599UL,
      11452069637570869555UL,
      15332250653395824223UL,
      9318912313336593440UL,
      10499356348280572422UL,
      17042034373048666488UL,
      1805505087651779950UL,
      13083730121955101027UL,
      9926866826056072641UL,
      12395083137174176754UL,
      13014086693993705056UL,
      18092419734315653769UL,
      4496402702769466389UL,
      4275128525646469625UL,
      16718947186147009622UL,
      2644524053331857687UL,
      16665345306739798209UL,
      756689505943647349UL,
      6332958748006341455UL,
      5397518675852254155UL,
      3282372277507744968UL,
      15124857616913606283UL,
      9958173582926173484UL,
      550475751710050266UL,
      9535384695938759828UL,
      11027794851313865315UL,
      1895999114042080393UL,
      17795970715748483584UL,
      3512907883609256988UL,
      10170876972722661254UL,
      5100888107877796098UL,
      14766188770308692257UL,
      5664728055166256274UL,
      1867780161745570575UL,
      5069314540135811628UL,
      10826357501146152497UL,
      8428576418859462269UL,
      6489498281288268568UL,
      248384571951887537UL,
      14408891171920865889UL,
      3830179243734057519UL,
      10976374785232997173UL,
      12375273678367885408UL,
      14917570089431431088UL,
      5317296011783481118UL,
      8812437177215009958UL,
      15702128452263965086UL,
      1418237564682130775UL,
      8287918193617750527UL,
      5641726496814939044UL,
      18399300296243087930UL,
      6176181444192939950UL,
      13286219625023629664UL,
      14609847597738937780UL,
      15778618041730427743UL,
      13113915167160321176UL,
      3534397173597697283UL,
      16753315048725296654UL,
      2378655170733740360UL,
      17894101054940110861UL,
      551298419243755034UL,
      14177640314441820846UL,
      18011171644070679608UL,
      1942137629605578202UL,
      17704970308598820532UL,
      10820688583425137796UL,
      319261663834750185UL,
      17320020179565189708UL,
      10828766552733203588UL,
      11254165892366229437UL,
      5921710089078452638UL,
      1692791583615940497UL,
      3154220012138640370UL,
      2462272376968205830UL,
      5215882904155809664UL,
      9063345109742779520UL,
      10012495044321978752UL,
      2282028593076952567UL,
      16490284710305269338UL,
      11358175869672944140UL,
      2648366387851958704UL,
      2535530668932196013UL,
      15386192992268326902UL,
      6797681746413993003UL,
      9131737009282615627UL,
      744965241806492274UL,
      15534171479957703942UL,
      11406512201534848823UL,
      1724859165393741376UL,
      2131804225590070214UL,
      10649852818715990109UL,
      7348272751505534329UL,
      15418610264624661717UL,
      14030296408486517359UL,
      6426639016335384064UL,
      14857241317133980380UL,
      8982836549816060296UL,
      2847738978322528776UL,
      14275200949057556108UL,
      1517491100508351526UL,
      11487065943069529588UL,
      7252270709068430025UL,
      1454069630547688509UL,
      879136823698237927UL,
      764541931096396549UL,
      16628452526739142958UL,
      8210570252116953863UL,
      17419012767447246106UL,
      16656819168530874484UL,
      10879562253146277412UL,
      9340840147615694245UL,
      6892625624787444041UL,
      6239858431661771035UL,
      10484131262376733793UL,
      15135908441777759839UL,
      3591372000141165328UL,
      17394508730963952016UL,
      11925077963498648480UL,
      2231224496660291273UL,
      8127998803539291684UL,
      16292452481085749975UL,
      16488107566197090UL,
      2060923303336906913UL,
      14929791059677233801UL,
      15052228947759922034UL,
      8630622898638529667UL,
      7467898009369859339UL,
      17930561480947107081UL
    };
    internal static Zobrist.TableEntry[] TranpositionTable;
    internal static Zobrist.TableEntryEval[] TranpositionTableEval;
    internal static ulong MaxSize;
    internal static bool Intitated;
    internal static int ZorbistNodesFound;

    internal static void InitiateZobristTable()
    {
      if (Zobrist.Intitated)
        return;
      Zobrist.MaxSize = 2000000UL;
      Zobrist.ZorbistNodesFound = 0;
      Zobrist.TranpositionTable = new Zobrist.TableEntry[Zobrist.MaxSize];
      Zobrist.TranpositionTableEval = new Zobrist.TableEntryEval[Zobrist.MaxSize];
      Zobrist.Intitated = true;
    }

    internal static void MarkAncient()
    {
      for (ulong index = 0; index < Zobrist.MaxSize; ++index)
        Zobrist.TranpositionTable[index].Ancient = true;
      for (ulong index = 0; index < Zobrist.MaxSize; ++index)
        Zobrist.TranpositionTableEval[index].Ancient = true;
    }

    internal static int? Search(ulong hash, byte depth, int alpha, int beta)
    {
      Zobrist.TableEntry tableEntry = Zobrist.TranpositionTable[hash % Zobrist.MaxSize];
      if ((long) tableEntry.Hash != (long) hash || (int) tableEntry.Depth < (int) depth)
        return new int?();
      if (tableEntry.NodeType == Zobrist.NodeType.Beta && tableEntry.Score < beta)
        return new int?();
      if (tableEntry.NodeType == Zobrist.NodeType.Alpha && tableEntry.Score > alpha)
        return new int?();
      tableEntry.Ancient = false;
      ++Zobrist.ZorbistNodesFound;
      return new int?(tableEntry.Score);
    }

    internal static int? SearchEval(ulong hash)
    {
      Zobrist.TableEntryEval tableEntryEval = Zobrist.TranpositionTableEval[hash % Zobrist.MaxSize];
      if ((long) tableEntryEval.Hash != (long) hash)
        return new int?();
      tableEntryEval.Ancient = false;
      ++Zobrist.ZorbistNodesFound;
      return new int?(tableEntryEval.Score);
    }

    internal static void AddEntry(ulong hash, byte depth, int score, Zobrist.NodeType nodeType)
    {
      ulong index = hash % Zobrist.MaxSize;
      if (!Zobrist.TranpositionTable[index].Ancient || (long) Zobrist.TranpositionTable[index].Hash == (long) hash && (int) Zobrist.TranpositionTable[index].Depth >= (int) depth)
        return;
      Zobrist.TranpositionTable[index].Hash = hash;
      Zobrist.TranpositionTable[index].Score = score;
      Zobrist.TranpositionTable[index].Depth = depth;
      Zobrist.TranpositionTable[index].NodeType = nodeType;
    }

    internal static void AddEntryEval(ulong hash, int score)
    {
      ulong index = hash % Zobrist.MaxSize;
      if (!Zobrist.TranpositionTableEval[index].Ancient)
        return;
      Zobrist.TranpositionTableEval[index].Hash = hash;
      Zobrist.TranpositionTableEval[index].Score = score;
    }

    internal static ulong UpdateZobristHash(ulong hash, MoveContent move, ChessPieceColor whosMove, bool pawnPromote)
    {
      hash = Zobrist.GetHashResult((int) move.MovingPiecePrimary.SrcPosition, move.MovingPiecePrimary.PieceType, move.MovingPiecePrimary.PieceColor, hash);
      if (move.MovingPieceSecondary.PieceType != ChessPieceType.None)
      {
        hash = Zobrist.GetHashResult((int) move.MovingPieceSecondary.SrcPosition, move.MovingPieceSecondary.PieceType, move.MovingPieceSecondary.PieceColor, hash);
        hash = Zobrist.GetHashResult((int) move.MovingPieceSecondary.DstPosition, move.MovingPieceSecondary.PieceType, move.MovingPieceSecondary.PieceColor, hash);
        if (move.MovingPieceSecondary.PieceColor == ChessPieceColor.White)
          hash ^= Zobrist.ZobristTable[770];
        else
          hash ^= Zobrist.ZobristTable[771];
      }
      if (move.TakenPiece.PieceType != ChessPieceType.None)
        hash = Zobrist.GetHashResult((int) move.TakenPiece.Position, move.TakenPiece.PieceType, move.TakenPiece.PieceColor, hash);
      hash = !pawnPromote ? Zobrist.GetHashResult((int) move.MovingPiecePrimary.DstPosition, move.MovingPiecePrimary.PieceType, move.MovingPiecePrimary.PieceColor, hash) : Zobrist.GetHashResult((int) move.MovingPiecePrimary.DstPosition, ChessPieceType.Queen, move.MovingPiecePrimary.PieceColor, hash);
      if (whosMove == ChessPieceColor.White)
      {
        hash ^= Zobrist.ZobristTable[769];
        hash ^= Zobrist.ZobristTable[768];
      }
      else
      {
        hash ^= Zobrist.ZobristTable[768];
        hash ^= Zobrist.ZobristTable[769];
      }
      return hash;
    }

    internal static ulong CalculateZobristHash(Board board)
    {
      ulong hash = 0;
      for (int position = 0; position < 64; ++position)
      {
        Square square = board.Squares[position];
        if (square.Piece != null)
          hash = Zobrist.GetHashResult(position, square.Piece.PieceType, square.Piece.PieceColor, hash);
      }
      ulong num = board.WhoseMove != ChessPieceColor.White ? hash ^ Zobrist.ZobristTable[769] : hash ^ Zobrist.ZobristTable[768];
      if (board.WhiteCastled)
        num ^= Zobrist.ZobristTable[770];
      if (board.BlackCastled)
        num ^= Zobrist.ZobristTable[771];
      return num;
    }

    private static ulong GetHashResult(int position, ChessPieceType pieceType, ChessPieceColor pieceColor, ulong hash)
    {
      if (pieceColor == ChessPieceColor.White)
      {
        if (pieceType == ChessPieceType.Pawn)
          hash ^= Zobrist.ZobristTable[position];
        else if (pieceType == ChessPieceType.Knight)
          hash ^= Zobrist.ZobristTable[position + 64];
        else if (pieceType == ChessPieceType.Bishop)
          hash ^= Zobrist.ZobristTable[position + 128];
        else if (pieceType == ChessPieceType.Rook)
          hash ^= Zobrist.ZobristTable[position + 192];
        else if (pieceType == ChessPieceType.Queen)
          hash ^= Zobrist.ZobristTable[position + 256];
        else if (pieceType == ChessPieceType.King)
          hash ^= Zobrist.ZobristTable[position + 320];
      }
      else if (pieceType == ChessPieceType.Pawn)
        hash ^= Zobrist.ZobristTable[position + 384];
      else if (pieceType == ChessPieceType.Knight)
        hash ^= Zobrist.ZobristTable[position + 448];
      else if (pieceType == ChessPieceType.Bishop)
        hash ^= Zobrist.ZobristTable[position + 512];
      else if (pieceType == ChessPieceType.Rook)
        hash ^= Zobrist.ZobristTable[position + 576];
      else if (pieceType == ChessPieceType.Queen)
        hash ^= Zobrist.ZobristTable[position + 640];
      else if (pieceType == ChessPieceType.King)
        hash ^= Zobrist.ZobristTable[position + 704];
      return hash;
    }

    public static string ToString()
    {
      int num1 = 0;
      int num2 = 0;
      int num3 = 0;
      int num4 = 0;
      int num5 = 0;
      foreach (Zobrist.TableEntry tableEntry in Zobrist.TranpositionTable)
      {
        if ((long) tableEntry.Hash != 0L)
        {
          if (tableEntry.NodeType == Zobrist.NodeType.Exact)
            ++num2;
          else if (tableEntry.NodeType == Zobrist.NodeType.Alpha)
            ++num3;
          else if (tableEntry.NodeType == Zobrist.NodeType.Beta)
            ++num4;
          ++num1;
        }
      }
      foreach (Zobrist.TableEntryEval tableEntryEval in Zobrist.TranpositionTableEval)
      {
        if ((long) tableEntryEval.Hash != 0L)
          ++num5;
      }
      return "Total: " + (object) num1 + " Exact: " + (object) num2 + " Alpha: " + (object) num3 + " Beta: " + (object) num4 + " Eval: " + (object) num5;
    }

    internal enum NodeType
    {
      Exact,
      Alpha,
      Beta,
    }

    internal struct TableEntry
    {
      internal byte Depth;
      internal ulong Hash;
      internal int Score;
      internal bool Ancient;
      internal Zobrist.NodeType NodeType;

      internal TableEntry(ulong hash, byte depth, int score, Zobrist.NodeType nodeType)
      {
        this.Hash = hash;
        this.Depth = depth;
        this.Score = score;
        this.NodeType = nodeType;
        this.Ancient = false;
      }
    }

    internal struct TableEntryEval
    {
      internal ulong Hash;
      internal int Score;
      internal bool Ancient;

      internal TableEntryEval(ulong hash, int score)
      {
        this.Hash = hash;
        this.Score = score;
        this.Ancient = false;
      }
    }
  }
}
